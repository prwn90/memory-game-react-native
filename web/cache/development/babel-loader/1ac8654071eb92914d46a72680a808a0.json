{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\purwi\\\\Desktop\\\\projects\\\\MemoryGame\\\\components\\\\Card.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { FontAwesome } from '@expo/vector-icons';\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var CardSource = FontAwesome;\n      var icon_name = 'question-circle';\n      var icon_color = '#393939';\n\n      if (this.props.is_open) {\n        CardSource = this.props.src;\n        icon_name = this.props.name;\n        icon_color = this.props.color;\n      }\n\n      return React.createElement(View, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 4\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: this.props.clickCard,\n        activeOpacity: 0.75,\n        underlayColor: \"#f1f1f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      }, React.createElement(CardSource, {\n        name: icon_name,\n        size: 50,\n        color: icon_color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport { Card as default };\nvar styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  card_text: {\n    fontSize: 50,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/purwi/Desktop/projects/MemoryGame/components/Card.js"],"names":["React","FontAwesome","Card","props","CardSource","icon_name","icon_color","is_open","src","name","color","styles","card","clickCard","Component","StyleSheet","create","flex","alignItems","card_text","fontSize","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;;IAEqBC,I;;;;;AAEpB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACZA,KADY;AAElB;;;;WAED,kBAAS;AAER,UAAIC,UAAU,GAAGH,WAAjB;AACA,UAAII,SAAS,GAAG,iBAAhB;AACA,UAAIC,UAAU,GAAG,SAAjB;;AAEA,UAAG,KAAKH,KAAL,CAAWI,OAAd,EAAsB;AACrBH,QAAAA,UAAU,GAAG,KAAKD,KAAL,CAAWK,GAAxB;AACAH,QAAAA,SAAS,GAAG,KAAKF,KAAL,CAAWM,IAAvB;AACAH,QAAAA,UAAU,GAAG,KAAKH,KAAL,CAAWO,KAAxB;AACA;;AAED,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,SAAxC;AAAmD,QAAA,aAAa,EAAE,IAAlE;AAAwE,QAAA,aAAa,EAAE,SAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AACC,QAAA,IAAI,EAAER,SADP;AAEC,QAAA,IAAI,EAAE,EAFP;AAGC,QAAA,KAAK,EAAEC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CADD;AAWA;;;;EA7BgCN,KAAK,CAACc,S;;SAAnBZ,I;AAkCrB,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,IAAI,EAAE;AACLK,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,UAAU,EAAE;AAFP,GAD0B;AAKhCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE;AAFF;AALqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableHighlight } from 'react-native';\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\n\r\nexport default class Card extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tlet CardSource = FontAwesome;\r\n\t\tlet icon_name = 'question-circle';\r\n\t\tlet icon_color = '#393939';\r\n\t\t\r\n\t\tif(this.props.is_open){\r\n\t\t\tCardSource = this.props.src;\r\n\t\t\ticon_name = this.props.name;\r\n\t\t\ticon_color = this.props.color;\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<View style={styles.card}>\r\n\t\t\t\t<TouchableHighlight onPress={this.props.clickCard} activeOpacity={0.75} underlayColor={\"#f1f1f1\"}>\r\n\t\t\t\t\t<CardSource \r\n\t\t\t\t\t\tname={icon_name} \r\n\t\t\t\t\t\tsize={50} \r\n\t\t\t\t\t\tcolor={icon_color} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</TouchableHighlight>\t\t\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcard: {\r\n\t\tflex: 1,\r\n\t\talignItems: 'center'\r\n\t},\r\n\tcard_text: {\r\n\t\tfontSize: 50,\r\n\t\tfontWeight: 'bold'\r\n\t}\r\n});"]},"metadata":{},"sourceType":"module"}