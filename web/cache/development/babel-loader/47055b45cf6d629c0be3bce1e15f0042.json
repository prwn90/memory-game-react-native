{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\purwi\\\\Desktop\\\\projects\\\\MemoryGameReactNative\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons';\nimport Header from 'components/Header';\nimport Score from 'components/Score';\nimport Card from 'components/Card';\nimport helpers from \"./helpers\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.renderCards = _this.renderCards.bind(_assertThisInitialized(_this));\n    _this.resetCards = _this.resetCards.bind(_assertThisInitialized(_this));\n    var sources = {\n      'fontawesome': FontAwesome,\n      'entypo': Entypo,\n      'ionicons': Ionicons\n    };\n    var cards = [{\n      src: 'fontawesome',\n      name: 'heart',\n      color: 'red'\n    }, {\n      src: 'entypo',\n      name: 'feather',\n      color: '#7d4b12'\n    }, {\n      src: 'entypo',\n      name: 'flashlight',\n      color: '#f7911f'\n    }, {\n      src: 'entypo',\n      name: 'flower',\n      color: '#37b24d'\n    }, {\n      src: 'entypo',\n      name: 'moon',\n      color: '#ffd43b'\n    }, {\n      src: 'entypo',\n      name: 'youtube',\n      color: '#FF0000'\n    }, {\n      src: 'entypo',\n      name: 'shop',\n      color: '#5f5f5f'\n    }, {\n      src: 'fontawesome',\n      name: 'github',\n      color: '#24292e'\n    }, {\n      src: 'fontawesome',\n      name: 'skype',\n      color: '#1686D9'\n    }, {\n      src: 'fontawesome',\n      name: 'send',\n      color: '#1c7cd6'\n    }, {\n      src: 'ionicons',\n      name: 'ios-magnet',\n      color: '#d61c1c'\n    }, {\n      src: 'ionicons',\n      name: 'logo-facebook',\n      color: '#3C5B9B'\n    }];\n    var clone = JSON.parse(JSON.stringify(cards));\n    _this.cards = cards.concat(clone);\n\n    _this.cards.map(function (obj) {\n      var id = Math.random().toString(36).substring(7);\n      obj.id = id;\n      obj.src = sources[obj.src];\n      obj.is_open = false;\n    });\n\n    _this.cards = _this.cards.shuffle();\n    _this.state = {\n      current_selection: [],\n      selected_pairs: [],\n      score: 0,\n      cards: _this.cards\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, this.renderRows.call(this)), React.createElement(Score, {\n        score: this.state.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: this.resetCards,\n        title: \"Reset\",\n        color: \"#008CFA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"resetCards\",\n    value: function resetCards() {\n      var cards = this.cards.map(function (obj) {\n        obj.is_open = false;\n        return obj;\n      });\n      cards = cards.shuffle();\n      this.setState({\n        current_selection: [],\n        selected_pairs: [],\n        cards: cards,\n        score: 0\n      });\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this2 = this;\n\n      var contents = this.getRowContents(this.state.cards);\n      return contents.map(function (cards, index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.row,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }\n        }, _this2.renderCards(cards));\n      });\n    }\n  }, {\n    key: \"renderCards\",\n    value: function renderCards(cards) {\n      var _this3 = this;\n\n      return cards.map(function (card, index) {\n        return React.createElement(Card, {\n          key: index,\n          src: card.src,\n          name: card.name,\n          color: card.color,\n          is_open: card.is_open,\n          clickCard: _this3.clickCard.bind(_this3, card.id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }\n        });\n      });\n    }\n  }, {\n    key: \"clickCard\",\n    value: function clickCard(id) {\n      var _this4 = this;\n\n      var selected_pairs = this.state.selected_pairs;\n      var current_selection = this.state.current_selection;\n      var score = this.state.score;\n      var index = this.state.cards.findIndex(function (card) {\n        return card.id == id;\n      });\n      var cards = this.state.cards;\n\n      if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\n        cards[index].is_open = true;\n        current_selection.push({\n          index: index,\n          name: cards[index].name\n        });\n\n        if (current_selection.length == 2) {\n          if (current_selection[0].name == current_selection[1].name) {\n            score += 1;\n            selected_pairs.push(cards[index].name);\n          } else {\n            cards[current_selection[0].index].is_open = false;\n            setTimeout(function () {\n              cards[index].is_open = false;\n\n              _this4.setState({\n                cards: cards\n              });\n            }, 500);\n          }\n\n          current_selection = [];\n        }\n\n        this.setState({\n          score: score,\n          cards: cards,\n          current_selection: current_selection\n        });\n      }\n    }\n  }, {\n    key: \"getRowContents\",\n    value: function getRowContents(cards) {\n      var contents_r = [];\n      var contents = [];\n      var count = 0;\n      cards.forEach(function (item) {\n        count += 1;\n        contents.push(item);\n\n        if (count == 4) {\n          contents_r.push(contents);\n          count = 0;\n          contents = [];\n        }\n      });\n      return contents_r;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  body: {\n    flex: 18,\n    justifyContent: 'space-between',\n    padding: 10,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/purwi/Desktop/projects/MemoryGameReactNative/App.js"],"names":["React","Ionicons","FontAwesome","Entypo","Header","Score","Card","helpers","App","props","renderCards","bind","resetCards","sources","cards","src","name","color","clone","JSON","parse","stringify","concat","map","obj","id","Math","random","toString","substring","is_open","shuffle","state","current_selection","selected_pairs","score","styles","container","body","renderRows","call","setState","contents","getRowContents","index","row","card","clickCard","findIndex","indexOf","push","length","setTimeout","contents_r","count","forEach","item","Component","StyleSheet","create","flex","alignSelf","backgroundColor","flexDirection","justifyContent","padding","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons';\n\nimport Header from 'components/Header';\nimport Score from 'components/Score';\nimport Card from 'components/Card';\n\nimport helpers from './helpers';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.renderCards = this.renderCards.bind(this);\n    this.resetCards = this.resetCards.bind(this);\n   \n    let sources = {\n      'fontawesome': FontAwesome,\n      'entypo': Entypo,\n      'ionicons': Ionicons\n    };\n\n    let cards = [\n      {\n        src: 'fontawesome',\n        name: 'heart',\n        color: 'red'\n      },\n      {\n        src: 'entypo',\n        name: 'feather',\n        color: '#7d4b12'\n      },\n      {\n        src: 'entypo',\n        name: 'flashlight',\n        color: '#f7911f'\n      },\n      {\n        src: 'entypo',\n        name: 'flower',\n        color: '#37b24d'\n      },\n      {\n        src: 'entypo',\n        name: 'moon',\n        color: '#ffd43b'\n      },\n      {\n        src: 'entypo',\n        name: 'youtube',\n        color: '#FF0000'\n      },\n      {\n        src: 'entypo',\n        name: 'shop',\n        color: '#5f5f5f'\n      },\n      {\n        src: 'fontawesome',\n        name: 'github',\n        color: '#24292e'\n      },\n      {\n        src: 'fontawesome',\n        name: 'skype',\n        color: '#1686D9'\n      },\n      {\n        src: 'fontawesome',\n        name: 'send',\n        color: '#1c7cd6'\n      },\n      {\n        src: 'ionicons',\n        name: 'ios-magnet',\n        color: '#d61c1c'\n      },\n      {\n        src: 'ionicons',\n        name: 'logo-facebook',\n        color: '#3C5B9B'\n      }\n    ];\n\n    let clone = JSON.parse(JSON.stringify(cards));\n\n    this.cards = cards.concat(clone);\n    this.cards.map((obj) => {\n      let id = Math.random().toString(36).substring(7);\n      obj.id = id;\n      obj.src = sources[obj.src];\n      obj.is_open = false;\n    });\n\n    this.cards = this.cards.shuffle(); \n    this.state = {\n      current_selection: [],\n      selected_pairs: [],\n      score: 0,\n      cards: this.cards\n    }\n  \n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Header />\n        <View style={styles.body}>\n          { \n            this.renderRows.call(this) \n          }\n        </View>\n        <Score score={this.state.score} />\n        <Button\n          onPress={this.resetCards}\n          title=\"Reset\"\n          color=\"#008CFA\" \n        />\n      </View>\n    );\n  }\n  \n\n  resetCards() {\n    let cards = this.cards.map((obj) => {\n      obj.is_open = false;\n      return obj;\n    });\n\n    cards = cards.shuffle();\n\n    this.setState({\n      current_selection: [],\n      selected_pairs: [],\n      cards: cards,\n      score: 0\n    });\n  }\n\n\n  renderRows() {\n   \n    let contents = this.getRowContents(this.state.cards);\n    return contents.map((cards, index) => {\n      return (\n        <View key={index} style={styles.row}>\n          { this.renderCards(cards) }\n        </View>\n      );\n    });\n   \n  }\n\n\n  renderCards(cards) {\n    return cards.map((card, index) => {\n      return (\n        <Card \n          key={index} \n          src={card.src} \n          name={card.name} \n          color={card.color} \n          is_open={card.is_open}\n          clickCard={this.clickCard.bind(this, card.id)} \n        />\n      );\n    });\n  }\n\n\n  clickCard(id) {\n    let selected_pairs = this.state.selected_pairs;\n    let current_selection = this.state.current_selection;\n    let score = this.state.score;\n\n    let index = this.state.cards.findIndex((card) => {\n      return card.id == id;\n    });\n\n    let cards = this.state.cards;\n    \n    if(cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1){\n\n      cards[index].is_open = true;\n      \n      current_selection.push({ \n        index: index,\n        name: cards[index].name\n      });\n\n      if(current_selection.length == 2){\n        if(current_selection[0].name == current_selection[1].name){\n          score += 1;\n          selected_pairs.push(cards[index].name);\n        }else{\n         \n          cards[current_selection[0].index].is_open = false;\n\n          setTimeout(() => {\n            cards[index].is_open = false;\n            this.setState({\n              cards: cards\n            });\n          }, 500);\n        }\n\n        current_selection = [];\n      }\n\n      this.setState({\n        score: score,\n        cards: cards,\n        current_selection: current_selection\n      });\n\n    }\n  \n  }\n\n\n  getRowContents(cards) {\n    let contents_r = [];\n    let contents = [];\n    let count = 0;\n    cards.forEach((item) => {\n      count += 1;\n      contents.push(item);\n      if(count == 4){\n        contents_r.push(contents)\n        count = 0;\n        contents = [];\n      }\n    });\n\n    return contents_r;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  body: {\n    flex: 18,\n    justifyContent: 'space-between',\n    padding: 10,\n    marginTop: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}